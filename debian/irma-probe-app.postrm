#!/bin/sh
# postrm script for test
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <overwriter>
#          <overwriter-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

#
# User
#

IRMA_USER="irma"

#
# Probe Application configuration
#

IRMA_INST_DIR="/opt/irma"
IRMA_PROBE_DIR="irma-probe"
IRMA_PROBE_INST_DIR="$IRMA_INST_DIR/$IRMA_PROBE_DIR/"

INITD_DIR="/etc/init.d"
IRMA_INITD_PROBE="celeryd.probe"
IRMA_INITD_PROBE_INST="$INITD_DIR/$IRMA_INITD_PROBE"

DEFAULT_DIR="/etc/default"
IRMA_DEFAULT_PROBE="celeryd.probe"
IRMA_DEFAULT_PROBE_INST="$DEFAULT_DIR/$IRMA_INITD_PROBE"


case "$1" in
    upgrade|failed-upgrade|abort-upgrade)
        if [ -f $IRMA_INITD_PROBE_INST ]; then
            invoke-rc.d $IRMA_INITD_PROBE restart
        fi
    ;;
    purge|remove|abort-install|disappear)
        if [ -f $IRMA_INITD_PROBE_INST ]; then
            invoke-rc.d $IRMA_INITD_PROBE stop
            update-rc.d -f $IRMA_INITD_PROBE remove
            rm $IRMA_INITD_PROBE_INST
        fi
        if [ -f $IRMA_DEFAULT_PROBE_INST ]; then
            rm $IRMA_DEFAULT_PROBE_INST
        fi
        if [ -d $IRMA_PROBE_INST_DIR ]; then
            rm -r $IRMA_PROBE_INST_DIR
        fi
    ;;

    *)
        echo "postrm called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
